import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
    public static int N;
    public static int M;
    public static int[] arr;
    public static boolean[] visit;
    public static StringBuilder sb = new StringBuilder();

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st  = new StringTokenizer(br.readLine(), " ");

        N = Integer.parseInt(st.nextToken());
        M = Integer.parseInt(st.nextToken());

        arr = new int[M];
        visit = new boolean[N];

        dfs(0);
        System.out.println(sb);

    }

    public static void dfs(int depth){
        if(depth == M){
            for(int tmp : arr){
                sb.append(tmp).append(" ");
            }
            sb.append('\n');
            return;
        }

        for(int i=0; i<N; i++){
            //깊이가 0이 아닐 때(현재 자릿수가 1이상일 때)
            if(depth != 0){
                //바로 앞에 위치한 숫자가 넣고자 하는 숫자보다 작거나 같다면
                if(arr[depth-1] <= i+1){
                    //숫자를 넣고
                    arr[depth] = i + 1;
                    //자식 노드를 탐색한다.
                    dfs(depth+1);
                }
            }else if(depth == 0){//숫자를 넣고자하는 자릿수가 0일 때
                //숫자를 그냥 넣고
                arr[depth] = i + 1;
                //자식 노드르 탐색한다.
                dfs(depth+1);
            }

        }
            }
}
