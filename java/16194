import java.io.IOException;
import java.util.StringTokenizer;
import java.io.BufferedReader;
import java.io.InputStreamReader;

public class Main {
	

	public static void main(String[] args)throws IOException{
		 BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		 
		 int num = Integer.parseInt(br.readLine());
		 StringTokenizer st = new StringTokenizer(br.readLine(), " ");
		 int[] arr = new int[num+1];
		 int[] answer = new int[num+1];
		 
		 //주어진 값을 저장
        //최솟값을 찾아야 하기 때문에 answer[i]에다가 P이상의 값을 넣는다.
		 for(int i=1; i<=num; i++) {
			 arr[i] = Integer.parseInt(st.nextToken());
			 answer[i] = 10001;
		 }
		 
		 //answer[1] = arr[1];
		 //System.out.println(arr[1]);
		 //카드의 갯수를 num으로 맞추는 방법은 1+(num-1), 2+(num-2)이런 방식이다.
		 //각 answer[i]와 answer[i-j]+arr[j]를 비교해서 작은 값을 answer[i]에 넣어주면 된다.
		 //위의 설명에서 answer[i]에는 i를 만들기 위한 최소 값이 들어가 있을 테고
		 //answer[i-j]에는 answer[i-1], answer[i-2]등 이전에 구했던 값에다가 1을 선택하면 드는 값, 2를 선택하면 드는 값 등을 더해준 값이다. 
		 for(int i=1; i<=num; i++) {
			 for(int j=1; j<=i; j++) {
				 answer[i] = Math.min(answer[i], answer[i-j]+arr[j]);
			 }
		 }
		 
		 System.out.println(answer[num]);

	}
}
