import java.util.Stack;
import java.util.Queue;
import java.util.LinkedList;

class Solution {
    public int solution(String s) {
        int answer = 0; 
        int idx = 0;
        boolean flag = true;
        
        while(true){
            Stack<Character> stack = new Stack<>();
            flag = true;
            
            if(idx > s.length()-1){
                if(answer == 0){
                    answer = 0;
                }
                break;
            }
            
            for(int i=idx; i<s.length(); i++){
                char tmp = s.charAt(i);
                if(tmp == '{' || tmp == '[' || tmp == '('){
                    stack.push(tmp);
                }else{
                    if(stack.empty()){
                        flag = false;
                        break;
                    }else{
                        char peek = stack.peek();
                        if(check(tmp, peek)){
                            stack.pop();
                        }else{
                            flag = false;
                            break;
                        }
                    }
                }
            }
            
            for(int i=0; i<idx; i++){
                char tmp = s.charAt(i);
                if(tmp == '{' || tmp == '[' || tmp == '('){
                    stack.push(tmp);
                }else{
                    if(stack.empty()){
                        flag = false;
                        break;
                    }else{
                        char peek = stack.peek();
                        if(check(tmp, peek)){
                            stack.pop();
                        }else{
                            flag = false;
                            break;
                        }
                    }
                }
            }
            
            if(!stack.empty()){
                flag = false;
            }
            
            if(flag){
                answer++;
            }

            idx++;
        }

        return answer;
    }
    
    public static boolean check(char tmp, char peek){
        boolean b = true;
        
        if(tmp == ')' && peek == '('){
            b = false;
        }
        if(tmp == '}' && peek == '{'){
            b = false;
        }
        if(tmp == ']' && peek == '['){
            b = false;
        }
        
        if(!b){
            return true;
        }
        
        return false;
    }

}
