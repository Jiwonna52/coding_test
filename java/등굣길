class Solution {
    
    public int solution(int m, int n, int[][] puddles) {
        int answer = 0;
        //갈 수 있는 방법을 map에 저장
        int[][] map = new int[n+1][m+1];
        
        //웅덩이는 -1로 표시
        for(int i=0; i<puddles.length; i++){
            int y = puddles[i][0];
            int x = puddles[i][1];
            
            map[x][y] = -1;
        }

        map[1][1] =1;
        
        for(int i=1; i<=n; i++){
            for(int j=1; j<=m; j++){
                //웅덩이에 도착했다면 continue
                if(map[i][j] == -1){
                    continue;
                }
                //해당 위치로 가는 방법은 왼쪽에 있는 위치(왼쪽 위치로 도착할 수 있는 방법이 존재한다면 즉, 0보다 크다면) 더하기
                if(map[i][j-1] > 0){
                    map[i][j] += (map[i][j-1])%1000000007;
                }
                //해당 위치로 가는 방법은 위쪽에 있는 위치(위쪽 위치로 도착할 수 있는 방법이 존재한다면 즉, 0보다 크다면) 더하기
                if(map[i-1][j] > 0){
                    map[i][j] += (map[i-1][j])%1000000007;
                }
            }
        }
        
        answer = map[n][m]%1000000007;
        
        return answer;
    }

}
