import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        int N = Integer.parseInt(br.readLine());
        int[] arr = new int[N+1];
        int[] dp = new int[N+1];
        StringTokenizer st = new StringTokenizer(br.readLine(), " ");
        boolean b = false;

        for(int i=0; i<N; i++){
            arr[i] = Integer.parseInt(st.nextToken());
        }

        //자기 자신도 세기 때문에 dp에다가 일단 1을 넣어준다.
        for(int i=0; i<N; i++){
            dp[i] = 1;
        }

        //뒤에서부터 검사를 해준다.
        //어차피 dp[N-1]은 길이가 1이기 때문에 고려하지 않는다.
        for(int i=N-2; i>=0; i--){
            for(int j=N-1; j>i; j--){
                //해당하는 수 i가 j보다 크다는 의미는 내림차순이 가능하다는 것이다.
                //그러므로 dp[i]와 내림차순이 가능한 수 arr[j]의 dp[j]+1 중 큰 수를 dp[i]에 넣어준다.
                if(arr[i] > arr[j]){
                    dp[i] = Math.max(dp[i], dp[j]+1);
                }
            }
        }

        //최댓값을 구해서 출력한다.
        int max = dp[0];
        for(int i=1; i<dp.length; i++){
            if(max < dp[i]){
                max = dp[i];
            }
        }
        System.out.println(max);
    }
}
