class Solution {

    public int minimumRounds(int[] tasks) {
        int answer = 0;
        HashMap<Integer, Integer> map = new HashMap<>();

        for(int i=0; i<tasks.length; i++){
            if(map.containsKey(tasks[i])){
                int tmp = map.get(tasks[i]) +1;
                map.put(tasks[i], tmp);
                //System.out.println(tmp);
            }else{
                map.put(tasks[i], 1);
            }
        }

        
        for(int key : map.keySet()){
            int value = map.get(key);
            System.out.println("key value " + key + " " + value);
            if(value < 2){
                System.out.println("No");
                return -1;
            }

            while(true){
                if(value <= 1){
                    break;
                }

                if(value-3 != 1 && value >= 3){
                    value -=3;
                    answer++;
                }else{
                    value -= 2;
                    answer++;
                }
            }

            if(value != 0){
                System.out.println("No");
                return -1;
            }
        }

        return answer;
    }

}

/*
class Solution {

    public int minimumRounds(int[] tasks) {
        int answer = 0;
        HashMap<Integer, Integer> map = new HashMap<>();

        for(int i=0; i<tasks.length; i++){
            if(map.containsKey(tasks[i])){
                int tmp = map.get(tasks[i]) +1;
                map.put(tasks[i], tmp);
            }else{
                map.put(tasks[i], 1);
            }
        }

        
        for(int key : map.keySet()){
            int value = map.get(key);

            if(value == 1){
                return -1;
            }

            if(value % 3 == 0){
                answer += (value/3);
            }else{
                answer += value/3 + 1;
            }
        }

        return answer;
    }

}
*/
