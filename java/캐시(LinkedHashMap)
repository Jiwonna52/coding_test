import java.util.LinkedHashMap;
import java.util.Map;

class Solution {
    public int solution(int cacheSize, String[] cities) {
        int answer = 0;
        Cache<String, Integer> cache = new Cache<>(cacheSize);
        
        for(int i=0; i<cities.length; i++){
            String data = cities[i].toUpperCase();
            if(cache.containsKey(data)){
                answer += 1;
                //System.out.println(data + ": hit");
            }else{
                answer += 5;
                //System.out.println(data + ": miss");
            }
            cache.put(data, 0);
        }

        //System.out.println(answer);
        
        return answer;
    }
}

class Cache<String, Integer> extends LinkedHashMap<String, Integer>{
    int capacity = 0;

    public Cache(int capacity) {
        super(capacity,0.75f,true);
        this.capacity = capacity;
    }

    @Override
    protected boolean removeEldestEntry(Map.Entry<String, Integer> eldest) {
        // eldest 가장 오랫동안 안쓴 데이터
        return size() > capacity;
    }
}
