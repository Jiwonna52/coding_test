import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.*;


public class Main {

    public static void main(String args[]) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        int N = Integer.parseInt(br.readLine());
        ArrayList<pair> list = new ArrayList<>();

        for(int i=0; i<N; i++){
            String[] s = br.readLine().split(" ");
            int start = Integer.parseInt(s[0]);
            int end = Integer.parseInt(s[1]);

            list.add(new pair(start, end));
        }

        Collections.sort(list);

        System.out.println(greedy(list));

        return;
    }

    public static int greedy(ArrayList<pair> list){
        //time은 끝나는 시간
        int time = 0;
        int count = 0;
        ArrayList<pair> ans = new ArrayList<>();

        for(pair a : list){
            //끝나는 시간이 시작 시간보다 빠르다면 이는 가능한 회의
            if(time <= a.start){
                //끝나는 시간을 새로  설정
                time = a.end;
                count++;
            }
        }

        return count;
    }

}

class pair implements Comparable<pair>{
    int start;
    int end;

    public pair(int start, int end){
        this.start = start;
        this.end = end;
    }

    //오름차순 순으로 정렬
    //오름차순으로 앞의 것과 뒤의 것을 배서 양수가 나오면 순서를 바꿔준다.
    @Override
    public int compareTo(pair a){
        if(this.end == a.end){
            //종료 시점이 같을 경우에는 시작 시점을 기준으로 정렬을 해줘야 한다.
            return this.start - a.start;
        }
        return this.end - a.end;
    }
}
