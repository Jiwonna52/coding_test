import java.io.IOException;
import java.io.BufferedReader;
import java.io.InputStreamReader;

public class Main {
	
	final static long mod = 1_000_000_000;
	
	public static void main(String[] args)throws IOException{
		 BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		 
		 int N = Integer.parseInt(br.readLine());
		 long[][] dp = new long[N+1][10];
		 
		 //한 자릿수의 계단수는 전부 1개이다
		 //i로 끝나는 계단수의 갯수
		 for(int i=1; i<=9; i++) {
			 dp[1][i] = 1;
		 }
		 
		 //두 번째 자릿수부터 N번째 자릿수까지 탐색
		 for(int i=2; i<=N; i++) {
			 //i번째 자릿수의 자릿값 탐색
			 //12에서 2는 두 번째 자릿수의 자릿값이 2.
			 for(int j=0; j<10; j++) {
				 //자릿값이 0일 경우
				 //이전 자릿수의 자릿값이 1만 가능하다.
				 if(j == 0) {
					 dp[i][j] = dp[i-1][1] % mod;
				 }else if(j == 9) {
					 //자릿값이 9일 경우
					 //이전 자릿수의 자릿값이 8만 가능하다.
					 dp[i][j] = dp[i-1][8] % mod;
				 }else {
					 //이전 자릿수가 현재의 자릿수 +1 과 -1이 가능하다.
					 //현재 자릿수가 2일 경우 올 수 있는 이전자릿수는 1과 3이다.
					 dp[i][j] = (dp[i-1][j-1] + dp[i-1][j+1]) % mod;
				 }
			 }
		 }
		 
		 long answer = 0;
		 
		 for(int i=0; i<10; i++) {
			 answer += dp[N][i];
		 }
		 
		 System.out.println(answer%mod);
		
		 
	}
}
