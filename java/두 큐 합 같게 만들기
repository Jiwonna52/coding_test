import java.util.Queue;
import java.util.LinkedList;

class Solution {
    public int solution(int[] queue1, int[] queue2) {
        int answer = 0;
        Queue<Integer> q1 = new LinkedList<>();
        Queue<Integer> q2 = new LinkedList<>();
        long q1Sum = 0;
        long q2Sum = 0;
        
        for(int i=0; i<queue1.length; i++){
            q1Sum += queue1[i];
            q1.add(queue1[i]);
        }
        
        for(int i=0; i<queue2.length; i++){
            q2Sum += queue2[i];
            q2.add(queue2[i]);
        }
        
        while(true){
            if(q1Sum == q2Sum){
               break;
            }
            
           // if(answer > 0 && (q1Sum == first && q2Sum == second)){
            //    answer = -1;
             //   break;
          //  }
            
            if(answer > (queue1.length + queue2.length)*2){
                answer = -1;
                break;
            }
            
            answer++;
            if(q1Sum > q2Sum){
                int tmp = q1.poll();
                q2.add(tmp);
                q1Sum -= tmp;
                q2Sum += tmp;
            }else{
                int tmp = q2.poll();
                q1.add(tmp);
                q1Sum += tmp;
                q2Sum -= tmp;
            }
            
            
        }
        
        return answer;
    }
}
