import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;
import java.util.Arrays;

public class Main {
    public static String[] arr;
    public static String[] make;
    public static boolean[] visit;
    public static int L;
    public static int C;

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine(), " ");
        L = Integer.parseInt(st.nextToken());
        C = Integer.parseInt(st.nextToken());
        arr = new String[C];
        make = new String[L];
        visit = new boolean[C];
        StringTokenizer stt = new StringTokenizer(br.readLine(), " ");

        for(int i=0; i<C; i++){
            arr[i] = stt.nextToken();
        }

        Arrays.sort(arr);

        re( 0,0);

    }

    public static void re(int at, int depth){
        if(depth == L){
            StringBuilder sb = new StringBuilder();
            int vo = 0;
            int co = 0;
            for(String tmp : make){
                if(tmp.equals("a") || tmp.equals("e") || tmp.equals("i") || tmp.equals("o") || tmp.equals("u")){
                    vo++;
                }else{
                    co++;
                }
                sb.append(tmp);
            }

            if(vo >= 1 && co >= 2){
                System.out.println(sb);
            }
            return;
        }

        for(int i=at; i<C; i++){
            if(!visit[i]){
                visit[i] = true;
                make[depth] = arr[i];
                re(i, depth+1);
                visit[i] = false;
            }
        }
    }

}
