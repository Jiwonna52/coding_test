import java.util.List;
import java.util.ArrayList;

class Solution {
    public int solution(String str1, String str2) {
        int answer = 0;
        str1 = str1.toUpperCase();
        str2 = str2.toUpperCase();
        
        List<String> one = new ArrayList<>();
        List<String> two = new ArrayList<>();
        List<String> max = new ArrayList<>();
        List<String> min = new ArrayList<>();
        
        int count = 0;
        int union = 0;
        
        for(int i=0; i<str1.length()-1; i++){
            StringBuilder sb = new StringBuilder();
            if((str1.charAt(i) >= 'A' && str1.charAt(i) <= 'Z') && (str1.charAt(i+1) >= 'A' && str1.charAt(i+1) <= 'Z')) {
                sb.append(str1.charAt(i)).append(str1.charAt(i+1));
                one.add(sb.toString());
            }
        }
        
        for(int i=0; i<str2.length()-1; i++){
            StringBuilder sb = new StringBuilder();
            if((str2.charAt(i) >= 'A' && str2.charAt(i) <= 'Z') && (str2.charAt(i+1) >= 'A' && str2.charAt(i+1) <= 'Z')) {
                sb.append(str2.charAt(i)).append(str2.charAt(i+1));
                two.add(sb.toString());
            }
        }
        
        if(one.size() != 0 || two.size() != 0){
            union = (one.size() + two.size());
        
            if(one.size() >= two.size()){
                max = one;
                min = two;
            }else{
                max = two;
                min = one;
            }
        
            for(int i=0; i<max.size(); i++){
                String tmp3 = max.get(i);
                if(min.contains(tmp3)){
                    count++;
                    min.remove(tmp3);
                }
            }
               
            union -= count;
            answer = (int)(((double)count/union)*65536);
        }else{
            answer = 65536;
        }

        return answer;
    }
}
