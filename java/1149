import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
import java.util.StringTokenizer;

public class Main {

    //단순히 열에서 가장 작은 수만을 구해서 더해주면 안 된다.
    //모든 행과 열의 경우의 수를 구해줘야 한다.
    public static void main(String[] args)throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int T = Integer.parseInt(br.readLine());
        int[][] arr= new int[T+1][4];
        int[][] dp = new int[T+1][4];

        //배열에다가 각 집의 가격을 넣어준다.
        //1은 Red, 2는 Green, 3은 Blue이다.
        for(int i=1; i<=T; i++){
            StringTokenizer st = new StringTokenizer(br.readLine(), " ");
            for(int j=1; j<=3; j++){
                arr[i][j] = Integer.parseInt(st.nextToken());
            }
        }

        //제일 첫 번째 집의 가격을 넣어준다.
        dp[1][1] = arr[1][1];
        dp[1][2] = arr[1][2];
        dp[1][3] = arr[1][3];

        //각 행과 열마다 선택할 수 있는 최솟값을 구해서 더해준다.
        for(int i=2; i<=T; i++){
            for(int j=1; j<=3; j++){
                if(j == 1){
                    dp[i][j] = arr[i][j] + Math.min(dp[i-1][2], dp[i-1][3]);
                }else if(j == 2){
                    dp[i][j] = arr[i][j] + Math.min(dp[i-1][1], dp[i-1][3]);
                }else{
                    dp[i][j] = arr[i][j] + Math.min(dp[i-1][1], dp[i-1][2]);
                }
            }
        }

        //맨 마지막 결과 값 중 제일 최솟값을 구한다.
        System.out.println(Math.min(Math.min(dp[T][1], dp[T][2]), dp[T][3]));

    }
}
