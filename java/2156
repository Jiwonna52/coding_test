import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;

public class Main {

    public static void main(String[] args)throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int N = Integer.parseInt(br.readLine());
        int[] wine = new int[N+1];
        int[] dp =new int[N+1];

        //와인의 양을 wine 배열에다가 넣어준다.
        for(int i=1; i<=N; i++){
            wine[i] = Integer.parseInt(br.readLine());
        }

        //첫 번째 고르는 최댓값은 그냥 고르는 거다.
        dp[1] = wine[1];

        //만일 와인의 수가 1보다 크다면 2의 최댓값은 첫 번째 와인과 두 번째 와인을 모두 선택하는 것이다.
        if(N > 1){
            dp[2] = wine[1] + wine[2];
        }

        //세 번째 와인부터는 모든 경우의 수를 따져서 최댓값을 구한다.
        //먼저 현재 와인을 선택하지 않고 이전의 최댓값만을 가지고 오는 경우가 있다, dp[i-1]
        //현재 와인을 선택하고 직전의 와인을 선택한 다음 i-3의 최댓값을 가지고 오는 경우(직전의 와인을 선택했기 때문에 i-2의 최댓값을 가지고 오면
        //연속으로 세 개를 선택할 수 없다는 조건에 위배된다), wine[i] + arr[i-1] + dp[i-3]
        //현재 와인을 선택하고 i-2번째의 최댓값을 가지고 오는 경우(whine[i-1]을 가지고 오게 되면 위의 조건에 위배된다.), wine[i] + dp[i-2]
        for(int i=3; i<=N; i++){
            dp[i] = Math.max(dp[i-1], Math.max(wine[i]+dp[i-2], wine[i]+wine[i-1]+dp[i-3]));
        }

        System.out.println(dp[N]);

    }
}
