/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int maxAncestorDiff(TreeNode root) {

        if(root == null){
            return 0;
        }

        return DFS(root, root.val, root.val);

    }

    public int DFS(TreeNode node, int max, int min){
        if(node == null){
            return Math.abs(max - min);
        }

        if(max < node.val){
            max = node.val;
        }
        if(min > node.val){
            min = node.val;
        }

        int left = DFS(node.left, max, min);
        int right = DFS(node.right, max, min);

        return Math.max(left, right);
    }
}
