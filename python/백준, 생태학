import sys

class Trie:
    def __init__(self):
        self.root = {}

    def insert(self, word: str) -> None:
        cur = self.root
        for w in word:
            if w not in cur:
                cur[w] = {}
            cur = cur[w]
        cur['*'] = word

    def findWord(self, word: str) -> bool:
        cur = self.root
        for w in word:
            if w not in cur:
                return False
            cur = cur[w]
        return '*' in cur


trees = {}
t = Trie()
total = 0
while True:
    tree = sys.stdin.readline().rstrip()
    if tree == '':
        break
    total += 1
    if t.findWord(tree):
        trees[tree] += 1
    else:
        t.insert(tree)
        trees[tree] = 1

keyList = list(trees.keys())
keyList.sort()

for k in keyList:
    cal = trees[k]/total * 100
    print("%s %.4f" %(k, cal))
